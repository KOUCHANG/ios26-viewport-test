:root{
    --gap: 8px;
    --safe-bottom: env(safe-area-inset-bottom);
}

*{box-sizing: border-box}

.container {
    width: 100%;
    box-sizing: border-box;
}

.panel-simple {
    padding: 18px;
}

/* iOS fix: avoid creating stacking context that breaks position:fixed
   Avoid transforms on body/html; if other code adds transforms this helps
   by forcing the fixed-bar to be a child of body and remain fixed. */
html, body {
    -webkit-transform: none !important;
    transform: none !important;
    -webkit-backface-visibility: hidden;
}

/* fixed bottom bar for keyboard testing */
#fixed-bar {
    position: fixed;
    left: 0;
    right: 0;
    bottom: calc(var(--safe-bottom, 0px)); /* JS will adjust to visualViewport when needed */
    height: 56px;
    background: linear-gradient(180deg, rgba(255,255,255,0.98), #fff);
    box-shadow: 0 -6px 18px rgba(0,0,0,0.12);
    display: flex;
    align-items: center;
    padding: 8px 12px;
    gap: 8px;
    z-index: 2147483000;
}

#fixed-bar .input-wrap {
    flex: 1 1 auto;
}

#fixed-bar input[type="text"]{
    width: 100%;
    height: 40px;
    font-size: 16px;
    padding: 8px 12px;
    border-radius: 8px;
    border: 1px solid #ddd;
    box-sizing: border-box;
}
/* end fixed bar styles */

.overlay-vh{background:rgba(0,0,0,0.35)}
.overlay-lvh{background:rgba(0,0,0,0.45)}
.overlay-dvh{background:rgba(0,0,0,0.55)}

.scroll-filler{height:120vh; display:flex; align-items:flex-start; justify-content:center; padding-top:28px; color:#444}

.status{
    position:fixed;
    right:12px;
    top:12px;
    background:rgba(255,255,255,0.96);
    border-radius:8px;
    padding:10px 12px;
    box-shadow:0 6px 18px rgba(17,24,39,0.08);
    font-size:0.85rem;
    color:#111;
    z-index:10000;
}

@media (max-width:420px){
    .overlay{font-size:0.78rem;padding:6px 8px}
    .panel-header{font-size:1rem}
}

/* Additional iOS-specific adjustment: ensure the fixed bar sits above keyboards and web UI */
@supports (-webkit-touch-callout: none) {
    #fixed-bar { position: fixed; }
}

/* On small screens, let each column take full viewport width and allow horizontal swipe */
@media (max-width:800px) {
    /* Show all three columns side-by-side even on small screens */
    .container { overflow-x: visible; -webkit-overflow-scrolling: touch; }
    .column { flex: 1 1 0; min-width: 0; max-width: 33.333%; }
}